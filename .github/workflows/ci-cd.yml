name: CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint-build-test:
    name: Lint, Build, and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify install
        run: pnpm list --depth=0

      - name: Run linter
        run: pnpm lint

      - name: Run unit tests (Jest)
        run: pnpm test

      - name: Run BDD tests (non-blocking on non-main)
        run: pnpm test:bdd
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}
        env:
          OPTIMIZELY_API_URL: ${{ secrets.OPTIMIZELY_API_URL }}
          OPTIMIZELY_SINGLE_KEY: ${{ secrets.OPTIMIZELY_SINGLE_KEY }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/optimizely-fe:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-publish:
    name: Publish Docker Image (main only)
    runs-on: ubuntu-latest
    needs: lint-build-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/optimizely-fe:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
